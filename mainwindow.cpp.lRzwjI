#include "mainwindow.h"
#include "ui_mainwindow.h"

MainWindow::MainWindow(QWidget *parent)
    : QMainWindow(parent)
    , ui(new Ui::MainWindow)
{
    ui->setupUi(this);
    ecs = new ECS(3,7);
    onStartup();

}

MainWindow::~MainWindow()
{
    delete ui;
    delete ecs;
}

void MainWindow::onStartup(){
    for(int i = 0; i < ecs->elevatorNum; i++){
        QString itemText = "Elevator " + QString::fromStdString(std::to_string(i+1));
        ui->elevator_selector_1->addItem(itemText);
        ui->elevator_selector_2->addItem(itemText);
        ui->elevator_selector_3->addItem(itemText);

    }
    ui->elevator_selector_1->setCurrentIndex(0);
    ui->elevator_selector_2->setCurrentIndex(1);
    ui->elevator_selector_3->setCurrentIndex(2);
    for(int i = 0; i<ecs->floorNum; i++){
        ui->spawnFloor->addItem(QString::fromStdString(std::to_string(i+1)));
        ui->SPfloor->addItem(QString::fromStdString(std::to_string(i+1)));
    }

    resetTable();

}

void MainWindow::resetTable(){
    ui->FPETable->setRowCount(ecs->floorNum);
    for(int i = 0;  i < ecs->floorNum; i++){
        vector<int> v = ecs->getFloorStats(i)->getPassengerNums();
        if(!v.empty()){
            QString passengers = QString::number(v.at(0));
            for(int g = 1; g < v.size(); g++){
                passengers = passengers + " ,"+ QString::number(v.at(g));
            }
            ui->FPETable->setItem(i,1,new QTableWidgetItem(passengers));
        }
        else{QString passengers = "";}

        QString elevators = "";
        for(int g = 0; g <ecs->elevatorNum; g++){
            if(ecs->getElevator(g)->getfloorNum()==i+1){
                elevators = elevators + QString::number(g) + ",";
            }
        }
        ui->FPETable->setItem(i,2,new QTableWidgetItem(elevators));

        QString floorname = "Floor " + QString::number(i+1);
        ui->FPETable->setItem(i,0,new QTableWidgetItem(floorname));
    }
    ui->SPfloor->clear();
    ui->spawnFloor->clear();
    for(int i = 0; i<ecs->floorNum; i++){
        ui->spawnFloor->addItem(QString::fromStdString(std::to_string(i+1)));
        ui->SPfloor->addItem(QString::fromStdString(std::to_string(i+1)));
    }
    ui->SPpassenger->clear();
    for(int i = 0; i < ecs->passengerNum; i++){
        ui->SPpassenger->addItem(QString::fromStdString(std::to_string(i+1)));
    }

    ui->requestTester->setRowCount(ecs->elevatorNum);
    for(int i = 0; i<ecs->elevatorNum; i++){
        ui->requestTester->setItem(i,0,new QTableWidgetItem(QString::number(i+1)));
    }
}


void MainWindow::on_elevator_selector_1_currentIndexChanged(const QString &arg1)
{
    int curelv = ui->elevator_selector_1->currentIndex();
    ui->elevator_floornum_1->display(ecs->getElevator(curelv)->getfloorNum());
    for(int i = 0; i < ecs->getElevator(curelv)->getPassengerList().size(); i++){
        QString itemText = "Passenger " + QString::fromStdString(std::to_string(ecs->getElevator(curelv)->getPassengerList().at(i)));
        ui->passengerlist_1->addItem(itemText);
    }
}


void MainWindow::on_elevator_selector_2_currentIndexChanged(const QString &arg1)
{
    int curelv = ui->elevator_selector_2->currentIndex();
    ui->elevator_floornum_2->display(ecs->getElevator(curelv)->getfloorNum());
    for(int i = 0; i < ecs->getElevator(curelv)->getPassengerList().size(); i++){
        QString itemText = "Passenger " + QString::fromStdString(std::to_string(ecs->getElevator(curelv)->getPassengerList().at(i)));
        ui->passengerlist_2->addItem(itemText);
    }
}


void MainWindow::on_elevator_selector_3_currentIndexChanged(const QString &arg1)
{
    int curelv = ui->elevator_selector_3->currentIndex();
    ui->elevator_floornum_3->display(ecs->getElevator(curelv)->getfloorNum());
    for(int i = 0; i < ecs->getElevator(curelv)->getPassengerList().size(); i++){
        QString itemText = "Passenger " + QString::fromStdString(std::to_string(ecs->getElevator(curelv)->getPassengerList().at(i)));
        ui->passengerlist_3->addItem(itemText);
    }
}


void MainWindow::on_pushButton_clicked()
{
    ecs->spawnPassenger(ui->spawnFloor->currentIndex());
    resetTable();

}


void MainWindow::on_SPsend_clicked()
{
    if(ecs->passengerNum==0){
        ui->SendError->setText("No passenger selected");
        return;
    }
    ui->SendError->setText("");
    ui->SendError->setText(QString(ui->SPpassenger->currentIndex()));
    return;
    int fnum = ui->SPfloor->currentIndex();
    Passenger* p = ecs->getPassenger(ui->SPpassenger->currentIndex());
    Request* req = new Request(ecs->getFloorStats(p->getCurrentFloor()));
    ecs->floorRequest(req);
    Elevator* el = ecs->dollOutRequest(req);
    for(int i = 0; i< ecs->elevatorNum; i++){
        if(el==ecs->getElevator(i)){
            ui->requestTester->setItem(i,1,new QTableWidgetItem(QString::number(req->getFloor())));
        }
    }
}
